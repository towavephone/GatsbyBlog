webpackJsonp([0xa929b17072f0],{1597:function(n,a){n.exports={data:{site:{siteMetadata:{title:"女王控的博客",description:'前端工程师，黑猫女王控，欢迎勾搭，技术相关<a href="https://github.com/towavephone" target="_blank">@towavephone</a>，QQ闲聊<a href="tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=634407147&website=www.oicqzone.com">@towave</a>，bili关注<a href="https://space.bilibili.com/11507708#/" target="_blank">@towave</a>',siteUrl:"https://blog.towavephone.com"}}},pathContext:{posts:[{excerpt:"背景 统计线上用户各个功能的使用情况，以便后续针对性的优化 实现 前端 使用  https://github.com/nytimes/react-tracking  三方库埋点 使用 sendBeacon 异步发送埋点信息 埋点信息默认发送 location，type（默认为 enter，即进入页面类型），create_by（埋点触发人） utils/sendReport.js index.js 后端 数据库表 web_track 记录了以下字段 用户(create_by…",html:'<h1 id="背景"><a href="#%E8%83%8C%E6%99%AF" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>背景</h1>\n<p>统计线上用户各个功能的使用情况，以便后续针对性的优化</p>\n<h1 id="实现"><a href="#%E5%AE%9E%E7%8E%B0" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>实现</h1>\n<h2 id="前端"><a href="#%E5%89%8D%E7%AB%AF" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>前端</h2>\n<ol>\n<li>使用 <a href="https://github.com/nytimes/react-tracking" target="_blank" rel="nofollow noreferrer noopener">https://github.com/nytimes/react-tracking</a> 三方库埋点</li>\n<li>使用 sendBeacon 异步发送埋点信息</li>\n<li>埋点信息默认发送 location，type（默认为 enter，即进入页面类型），create_by（埋点触发人）</li>\n</ol>\n<p>utils/sendReport.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="66335878561634850000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`function sendBeacon(url, data) {\n   if (!navigator.sendBeacon) {\n      return false;\n   }\n\n   return navigator.sendBeacon(url, data);\n}\n\nexport default function sendReport(data) {\n   const newData = new FormData();\n   newData.append(\'data\', JSON.stringify(data));\n   return sendBeacon(\'/web_track/send/\', newData);\n}`, `66335878561634850000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">function</span> <span class="token function">sendBeacon</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>navigator<span class="token punctuation">.</span>sendBeacon<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n\n   <span class="token keyword">return</span> navigator<span class="token punctuation">.</span><span class="token function">sendBeacon</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">sendReport</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   newData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'data\'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token keyword">return</span> <span class="token function">sendBeacon</span><span class="token punctuation">(</span><span class="token string">\'/web_track/send/\'</span><span class="token punctuation">,</span> newData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>index.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="77971317906188700000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`import { pick } from \'lodash\'\n\nimport sendReport from \'./utils/sendReport\';\n\nconst isProd = process.env.NODE_ENV === \'production\';\n\nconst TrackHoc = ({ children }) => {\n   const { Track } = useTracking(\n      () => ({\n         location: pick(window.location, [\'origin\', \'hash\', \'href\']),\n         type: \'enter\', // 默认值\n         create_by: \'当前登录用户或者不传根据 cookie 来判断用户\'\n      }),\n      {\n         dispatch: (data) => {\n            console.log(\'tracking\', data);\n            // 不是正式环境不上传埋点数据\n            if (!isProd) {\n               return;\n            }\n            sendReport(data);\n         }\n      }\n   );\n\n   return <Track>{children}</Track>\n};`, `77971317906188700000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> pick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'lodash\'</span>\n\n<span class="token keyword">import</span> sendReport <span class="token keyword">from</span> <span class="token string">\'./utils/sendReport\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> isProd <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">\'production\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">TrackHoc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n   <span class="token keyword">const</span> <span class="token punctuation">{</span> Track <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTracking</span><span class="token punctuation">(</span>\n      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n         location<span class="token punctuation">:</span> <span class="token function">pick</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'origin\'</span><span class="token punctuation">,</span> <span class="token string">\'hash\'</span><span class="token punctuation">,</span> <span class="token string">\'href\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n         type<span class="token punctuation">:</span> <span class="token string">\'enter\'</span><span class="token punctuation">,</span> <span class="token comment">// 默认值</span>\n         create_by<span class="token punctuation">:</span> <span class="token string">\'当前登录用户或者不传根据 cookie 来判断用户\'</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n         <span class="token function-variable function">dispatch</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'tracking\'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 不是正式环境不上传埋点数据</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isProd<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               <span class="token keyword">return</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token function">sendReport</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n   <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n   <span class="token keyword">return</span> <span class="token operator">&lt;</span>Track<span class="token operator">></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Track<span class="token operator">></span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="后端"><a href="#%E5%90%8E%E7%AB%AF" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>后端</h2>\n<p>数据库表 web_track 记录了以下字段</p>\n<ol>\n<li>用户(create_by)</li>\n<li>访问信息(location)</li>\n<li>对应页面(page)</li>\n<li>对应功能(function)</li>\n<li>埋点类型(type，目前有 enter/click 两类，对应进入页面/事件点击)</li>\n</ol>\n<h1 id="使用方式"><a href="#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>使用方式</h1>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="88998040554921900000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`import { useTracking } from \'react-tracking\';\n\n// 在函数组件使用，进入页面触发专用\nuseTracking({ page: \'human_driver_compare\' }, { dispatchOnMount: true });\n\n// 在函数组件使用，事件触发专用\nconst { trackEvent, Track } = useTracking({ page: \'job_detail\' });\n// 这里使用 Track 高阶组件包裹之后，孙子组件调用 trackEvent 时候就会合并父级 data（当然这里的 trackEvent 触发也会合并），即孙子组件不需要在重复 page: \'job_detail\'，默认 type 为 enter\nreturn <Track>{children}</Track>;\n\n// 在类组件中使用，装饰器装饰之后 props 就带有 tracking 属性\n@track()\nexport default class Statistic extends React.Component {\n   handleShowSummaryClick = (e) => {\n      const { checked } = e.target;\n      this.setState({ show_summary: checked });\n      if (checked) {\n         // 事件触发\n         this.props.tracking.trackEvent({ function: \'show_summary\', type: \'click\' });\n      }\n   };\n\n   // 点击事件触发，即调用这个函数就触发，注意和上面的触发逻辑不同\n   @track({ function: \'show_summary\', type: \'click\' })\n   handleShowSummaryClick = (e) => {\n      const { checked } = e.target;\n      this.setState({ show_summary: checked });\n   };\n}`, `88998040554921900000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> useTracking <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-tracking\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 在函数组件使用，进入页面触发专用</span>\n<span class="token function">useTracking</span><span class="token punctuation">(</span><span class="token punctuation">{</span> page<span class="token punctuation">:</span> <span class="token string">\'human_driver_compare\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> dispatchOnMount<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 在函数组件使用，事件触发专用</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> trackEvent<span class="token punctuation">,</span> Track <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTracking</span><span class="token punctuation">(</span><span class="token punctuation">{</span> page<span class="token punctuation">:</span> <span class="token string">\'job_detail\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 这里使用 Track 高阶组件包裹之后，孙子组件调用 trackEvent 时候就会合并父级 data（当然这里的 trackEvent 触发也会合并），即孙子组件不需要在重复 page: \'job_detail\'，默认 type 为 enter</span>\n<span class="token keyword">return</span> <span class="token operator">&lt;</span>Track<span class="token operator">></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Track<span class="token operator">></span><span class="token punctuation">;</span>\n\n<span class="token comment">// 在类组件中使用，装饰器装饰之后 props 就带有 tracking 属性</span>\n@<span class="token function">track</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Statistic</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n   <span class="token function-variable function">handleShowSummaryClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> checked <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> show_summary<span class="token punctuation">:</span> checked <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>checked<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n         <span class="token comment">// 事件触发</span>\n         <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>tracking<span class="token punctuation">.</span><span class="token function">trackEvent</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">function</span><span class="token punctuation">:</span> <span class="token string">\'show_summary\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'click\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n   <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n   <span class="token comment">// 点击事件触发，即调用这个函数就触发，注意和上面的触发逻辑不同</span>\n   @<span class="token function">track</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">function</span><span class="token punctuation">:</span> <span class="token string">\'show_summary\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'click\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   <span class="token function-variable function">handleShowSummaryClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> checked <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> show_summary<span class="token punctuation">:</span> checked <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>之后使用 redash 读取 mongo 数据库进行统计</p>',id:"/home/runner/work/GatsbyBlog/GatsbyBlog/blog/React 前端埋点选型/index.md absPath of file >>> MarkdownRemark",timeToRead:2,frontmatter:{date:"2025-10-27 11:17:30",path:"/react-frontend-tracking-selection/",tags:"前端, 埋点, 预研",title:"React 前端埋点选型",draft:null}}],length:1,tag:"埋点",pagesSum:1,page:1}}}});
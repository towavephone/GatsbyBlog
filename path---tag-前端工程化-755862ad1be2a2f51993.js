webpackJsonp([73385903424271],{1541:function(n,s){n.exports={data:{site:{siteMetadata:{title:"女王控的博客",description:'前端工程师，黑猫女王控，欢迎勾搭，技术相关<a href="https://github.com/towavephone" target="_blank">@towavephone</a>，QQ闲聊<a href="tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=634407147&website=www.oicqzone.com">@towave</a>，bili关注<a href="https://space.bilibili.com/11507708#/" target="_blank">@towave</a>',siteUrl:"https://blog.towavephone.com"}}},pathContext:{posts:[{excerpt:"需求背景 由于 C 端营销线新建项目需要模板化，需要代码模板的生成功能，以便统一技术栈 一期 一期代码生成需要在 lerna 工程下去做改造，除了带有代码模板的功能，还封装了执行脚本的入口 参考链接： react-boilerplate 这里的代码模板包含项目级别的代码模板、页面级别的代码模板，目前只完成了项目的代码模板生成 目录结构 脚本主入口 package.json 模板代码生成 模板代码执行主入口 internals/generators/index.js 检测 packages…",html:'<h1 id="需求背景"><a href="#%E9%9C%80%E6%B1%82%E8%83%8C%E6%99%AF" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>需求背景</h1>\n<p>由于 C 端营销线新建项目需要模板化，需要代码模板的生成功能，以便统一技术栈</p>\n<h1 id="一期"><a href="#%E4%B8%80%E6%9C%9F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>一期</h1>\n<p>一期代码生成需要在 lerna 工程下去做改造，除了带有代码模板的功能，还封装了执行脚本的入口</p>\n<p>参考链接：<a href="https://github.com/react-boilerplate/react-boilerplate" target="_blank" rel="nofollow noreferrer noopener">react-boilerplate</a></p>\n<blockquote>\n<p>这里的代码模板包含项目级别的代码模板、页面级别的代码模板，目前只完成了项目的代码模板生成</p>\n</blockquote>\n<h2 id="目录结构"><a href="#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>目录结构</h2>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="7906488233022668000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`.\n├── index.html\n├── internals\n│   ├── generators\n│   │   ├── index.js // 模板代码执行主入口\n│   │   ├── package // 模板文件夹，带有模板变量的文件后缀名为 hbs\n│   │   │   ├── config.js.hbs\n│   │   │   ├── index.js // 项目级别的代码模板命令执行入口\n│   │   │   ├── package-lock.json.hbs\n│   │   │   ├── package.json.hbs // 带模板变量的模板文件\n│   │   │   └── template // 不带模板变量的模板文件\n│   │   ├── page\n│   │   │   └── index.js // 页面级别的代码模板命令执行入口\n│   │   └── utils\n│   │       ├── directoryExists.js // 检测 packages 文件夹存在性\n│   │       └── fileKeyExists.js // 检测 packages 下面文件里面某种属性是否存在，主要为了实现端口占用检测功能\n│   └── scripts\n│       ├── helpers\n│       │   └── argv.js // 命令行参数封装\n│       └── run.js // 脚本执行主入口\n├── packages // 项目源代码，即代码模板生成后的结果文件夹\n|   ├── demo1\n│   └── demo2\n├── lerna.json\n├── package-lock.json\n├── package.json // 命令主入口\n└── readme.md`, `7906488233022668000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token punctuation">.</span>\n├── index<span class="token punctuation">.</span>html\n├── internals\n│   ├── generators\n│   │   ├── index<span class="token punctuation">.</span>js <span class="token comment">// 模板代码执行主入口</span>\n│   │   ├── <span class="token keyword">package</span> <span class="token comment">// 模板文件夹，带有模板变量的文件后缀名为 hbs</span>\n│   │   │   ├── config<span class="token punctuation">.</span>js<span class="token punctuation">.</span>hbs\n│   │   │   ├── index<span class="token punctuation">.</span>js <span class="token comment">// 项目级别的代码模板命令执行入口</span>\n│   │   │   ├── <span class="token keyword">package</span><span class="token operator">-</span>lock<span class="token punctuation">.</span>json<span class="token punctuation">.</span>hbs\n│   │   │   ├── <span class="token keyword">package</span><span class="token punctuation">.</span>json<span class="token punctuation">.</span>hbs <span class="token comment">// 带模板变量的模板文件</span>\n│   │   │   └── template <span class="token comment">// 不带模板变量的模板文件</span>\n│   │   ├── page\n│   │   │   └── index<span class="token punctuation">.</span>js <span class="token comment">// 页面级别的代码模板命令执行入口</span>\n│   │   └── utils\n│   │       ├── directoryExists<span class="token punctuation">.</span>js <span class="token comment">// 检测 packages 文件夹存在性</span>\n│   │       └── fileKeyExists<span class="token punctuation">.</span>js <span class="token comment">// 检测 packages 下面文件里面某种属性是否存在，主要为了实现端口占用检测功能</span>\n│   └── scripts\n│       ├── helpers\n│       │   └── argv<span class="token punctuation">.</span>js <span class="token comment">// 命令行参数封装</span>\n│       └── run<span class="token punctuation">.</span>js <span class="token comment">// 脚本执行主入口</span>\n├── packages <span class="token comment">// 项目源代码，即代码模板生成后的结果文件夹</span>\n<span class="token operator">|</span>   ├── demo1\n│   └── demo2\n├── lerna<span class="token punctuation">.</span>json\n├── <span class="token keyword">package</span><span class="token operator">-</span>lock<span class="token punctuation">.</span>json\n├── <span class="token keyword">package</span><span class="token punctuation">.</span>json <span class="token comment">// 命令主入口</span>\n└── readme<span class="token punctuation">.</span>md</code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="脚本主入口"><a href="#%E8%84%9A%E6%9C%AC%E4%B8%BB%E5%85%A5%E5%8F%A3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>脚本主入口</h2>\n<p>package.json</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="93359132468036910000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`{\n   &quot;name&quot;: &quot;root&quot;,\n   &quot;private&quot;: true,\n   &quot;devDependencies&quot;: {\n      &quot;cross-env&quot;: &quot;^7.0.3&quot;,\n      &quot;lerna&quot;: &quot;^4.0.0&quot;,\n      &quot;minimist&quot;: &quot;^1.2.5&quot;,\n      &quot;plop&quot;: &quot;^2.7.4&quot;,\n      &quot;shelljs&quot;: &quot;^0.8.4&quot;\n   },\n   &quot;scripts&quot;: {\n      &quot;postinstall&quot;: &quot;lerna bootstrap&quot;,\n      &quot;start&quot;: &quot;node internals/scripts/run --cmd=start&quot;,\n      &quot;build&quot;: &quot;node internals/scripts/run --cmd=build&quot;,\n      &quot;generate&quot;: &quot;plop --plopfile internals/generators/index.js&quot;\n   }\n}`, `93359132468036910000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="json"\n              >\n                <span class="gatsby-code-button-language">json</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="json"><pre style="counter-reset: linenumber NaN" class="language-json line-numbers"><code class="language-json"><span class="token punctuation">{</span>\n   <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span>\n   <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n   <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">"cross-env"</span><span class="token operator">:</span> <span class="token string">"^7.0.3"</span><span class="token punctuation">,</span>\n      <span class="token property">"lerna"</span><span class="token operator">:</span> <span class="token string">"^4.0.0"</span><span class="token punctuation">,</span>\n      <span class="token property">"minimist"</span><span class="token operator">:</span> <span class="token string">"^1.2.5"</span><span class="token punctuation">,</span>\n      <span class="token property">"plop"</span><span class="token operator">:</span> <span class="token string">"^2.7.4"</span><span class="token punctuation">,</span>\n      <span class="token property">"shelljs"</span><span class="token operator">:</span> <span class="token string">"^0.8.4"</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n   <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">"postinstall"</span><span class="token operator">:</span> <span class="token string">"lerna bootstrap"</span><span class="token punctuation">,</span>\n      <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node internals/scripts/run --cmd=start"</span><span class="token punctuation">,</span>\n      <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"node internals/scripts/run --cmd=build"</span><span class="token punctuation">,</span>\n      <span class="token property">"generate"</span><span class="token operator">:</span> <span class="token string">"plop --plopfile internals/generators/index.js"</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="模板代码生成"><a href="#%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>模板代码生成</h2>\n<h3 id="模板代码执行主入口"><a href="#%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%BB%E5%85%A5%E5%8F%A3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>模板代码执行主入口</h3>\n<p>internals/generators/index.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="43423776804292770000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`const shell = require(\'shelljs\');\n\nconst packageGenerator = require(\'./package/index.js\');\n\nmodule.exports = (plop) => {\n   plop.setGenerator(\'package\', packageGenerator); // 注册 package 下的命令\n   // plop.setGenerator(&quot;page&quot;, containerGenerator);\n   plop.setDefaultInclude({ actionTypes: true });\n   // 拓展 plop 复制功能\n   plop.setActionType(\'copy\', (answers, config, plop) => {\n      const src = plop.renderString(config.src, answers);\n      const dest = plop.renderString(config.dest, answers);\n      shell.cp(\'-r\', src, dest);\n   });\n};`, `43423776804292770000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">const</span> shell <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'shelljs\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> packageGenerator <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./package/index.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n   plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">\'package\'</span><span class="token punctuation">,</span> packageGenerator<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 注册 package 下的命令</span>\n   <span class="token comment">// plop.setGenerator("page", containerGenerator);</span>\n   plop<span class="token punctuation">.</span><span class="token function">setDefaultInclude</span><span class="token punctuation">(</span><span class="token punctuation">{</span> actionTypes<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token comment">// 拓展 plop 复制功能</span>\n   plop<span class="token punctuation">.</span><span class="token function">setActionType</span><span class="token punctuation">(</span><span class="token string">\'copy\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">answers<span class="token punctuation">,</span> config<span class="token punctuation">,</span> plop</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> src <span class="token operator">=</span> plop<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>src<span class="token punctuation">,</span> answers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> dest <span class="token operator">=</span> plop<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>dest<span class="token punctuation">,</span> answers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      shell<span class="token punctuation">.</span><span class="token function">cp</span><span class="token punctuation">(</span><span class="token string">\'-r\'</span><span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="检测-packages-文件夹存在性"><a href="#%E6%A3%80%E6%B5%8B-packages-%E6%96%87%E4%BB%B6%E5%A4%B9%E5%AD%98%E5%9C%A8%E6%80%A7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>检测 packages 文件夹存在性</h3>\n<p>internals/generators/utils/directoryExists.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="90713911130661700000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`const fs = require(\'fs\');\nconst path = require(\'path\');\n\n/**\n *\n * @param {*} directoryPath 文件夹路径\n * @param {*} value 输入的值\n * @returns\n */\nfunction directoryExists(directoryPath, value) {\n   const directoryFullPath = path.join(\n      process.cwd(),\n      ...(Array.isArray(directoryPath) ? directoryPath : [directoryPath])\n   );\n   if (fs.existsSync(directoryFullPath) && fs.statSync(directoryFullPath).isDirectory()) {\n      const packages = fs.readdirSync(directoryFullPath);\n      return packages.indexOf(value) >= 0;\n   }\n   return false;\n}\n\nmodule.exports = directoryExists;`, `90713911130661700000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'fs\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'path\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n *\n * @param {*} directoryPath 文件夹路径\n * @param {*} value 输入的值\n * @returns\n */</span>\n<span class="token keyword">function</span> <span class="token function">directoryExists</span><span class="token punctuation">(</span><span class="token parameter">directoryPath<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">const</span> directoryFullPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>\n      process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token operator">...</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>directoryPath<span class="token punctuation">)</span> <span class="token operator">?</span> directoryPath <span class="token punctuation">:</span> <span class="token punctuation">[</span>directoryPath<span class="token punctuation">]</span><span class="token punctuation">)</span>\n   <span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>directoryFullPath<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>directoryFullPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>directoryFullPath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> packages<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n   <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> directoryExists<span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="检测-packages-下面文件里面某种属性是否存在"><a href="#%E6%A3%80%E6%B5%8B-packages-%E4%B8%8B%E9%9D%A2%E6%96%87%E4%BB%B6%E9%87%8C%E9%9D%A2%E6%9F%90%E7%A7%8D%E5%B1%9E%E6%80%A7%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>检测 packages 下面文件里面某种属性是否存在</h3>\n<p>主要为了实现端口占用检测功能</p>\n<p>internals/generators/utils/fileKeyExists.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="90375058707755220000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`const fs = require(\'fs\');\nconst path = require(\'path\');\nconst packagesPath = path.join(process.cwd(), \'packages\');\nconst packages = fs.readdirSync(packagesPath);\nconst lodash = require(\'lodash\');\n\n/**\n * 检测 packages 下面文件里面某种属性是否存在\n * @param {*} filePath 文件路径\n * @param {*} key 文件的属性\n * @param {*} defaultValue 属性不存在时的默认值\n * @param {*} value 输入的值\n * @returns\n */\nfunction fileKeyExists(filePath, key, defaultValue, value) {\n   const values = [];\n   packages.forEach((item) => {\n      if (item !== \'js-bridge\') {\n         const fileFullPath = path.join(packagesPath, item, ...(Array.isArray(filePath) ? filePath : [filePath]));\n         if (fs.existsSync(fileFullPath) && fs.statSync(fileFullPath).isFile()) {\n            const fileResult = require(fileFullPath);\n            const fileKeyValue = lodash.get(fileResult, key);\n            if (fileKeyValue) {\n               values.push(fileKeyValue);\n            } else {\n               values.push(defaultValue);\n            }\n         } else {\n            values.push(defaultValue);\n         }\n      }\n   });\n   return values.map((item) => \\`\\${item}\\`).indexOf(value) >= 0;\n}\n\nmodule.exports = fileKeyExists;`, `90375058707755220000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'fs\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'path\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> packagesPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">\'packages\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>packagesPath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> lodash <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'lodash\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * 检测 packages 下面文件里面某种属性是否存在\n * @param {*} filePath 文件路径\n * @param {*} key 文件的属性\n * @param {*} defaultValue 属性不存在时的默认值\n * @param {*} value 输入的值\n * @returns\n */</span>\n<span class="token keyword">function</span> <span class="token function">fileKeyExists</span><span class="token punctuation">(</span><span class="token parameter">filePath<span class="token punctuation">,</span> key<span class="token punctuation">,</span> defaultValue<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n   packages<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">!==</span> <span class="token string">\'js-bridge\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n         <span class="token keyword">const</span> fileFullPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>packagesPath<span class="token punctuation">,</span> item<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span> <span class="token operator">?</span> filePath <span class="token punctuation">:</span> <span class="token punctuation">[</span>filePath<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>fileFullPath<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>fileFullPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> fileResult <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>fileFullPath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> fileKeyValue <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>fileResult<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>fileKeyValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fileKeyValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n               values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>defaultValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>defaultValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token keyword">return</span> values<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> fileKeyExists<span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="项目级别的代码模板命令执行入口"><a href="#%E9%A1%B9%E7%9B%AE%E7%BA%A7%E5%88%AB%E7%9A%84%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%85%A5%E5%8F%A3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>项目级别的代码模板命令执行入口</h3>\n<p>internals/generators/package/index.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="12201501177763707000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`const directoryExists = require(\'../utils/directoryExists\');\nconst fileKeyExists = require(\'../utils/fileKeyExists\');\n\nconst portExists = (value) =>\n   fileKeyExists(\'config.js\', \'serverPort\', 3000, value) || fileKeyExists(\'config.js\', \'fePort\', 8888, value);\n\nmodule.exports = {\n   description: \'生成 package\',\n   prompts: [\n      {\n         type: \'input\',\n         name: \'name\',\n         message: \'package 叫什么名字？\',\n         default: \'demo\',\n         validate: (value) => {\n            if (/.+/.test(value)) {\n               return directoryExists(\'packages\', value) ? \'package 名字已存在\' : true;\n            }\n\n            return \'package 名字必填\';\n         }\n      },\n      {\n         type: \'input\',\n         name: \'serverPort\',\n         message: \'package 的 Node.js 服务端口？\',\n         default: \'8001\',\n         validate: (value) => {\n            if (/.+/.test(value)) {\n               return portExists(value) ? \'要设置 package 的 Node.js 服务端口已被占用\' : true;\n            }\n\n            return \'package 名字必填\';\n         }\n      },\n      {\n         type: \'input\',\n         name: \'fePort\',\n         message: \'package 的 webpack-dev-server 端口？\',\n         default: \'8002\',\n         validate: (value) => {\n            if (/.+/.test(value)) {\n               return portExists(value) ? \'要设置 package 的 webpack-dev-server 端口已被占用\' : true;\n            }\n\n            return \'package 名字必填\';\n         }\n      }\n   ],\n   actions: (data) => {\n      const actions = [\n         {\n            type: \'copy\',\n            src: \'internals/generators/package/template\',\n            dest: \'packages/{{ dashCase name }}\'\n         },\n         {\n            type: \'addMany\',\n            templateFiles: \'package/*.hbs\',\n            destination: \'../../packages/{{ dashCase name }}/\'\n         }\n      ];\n\n      return actions;\n   }\n};`, `12201501177763707000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">const</span> directoryExists <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'../utils/directoryExists\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> fileKeyExists <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'../utils/fileKeyExists\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">portExists</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n   <span class="token function">fileKeyExists</span><span class="token punctuation">(</span><span class="token string">\'config.js\'</span><span class="token punctuation">,</span> <span class="token string">\'serverPort\'</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">fileKeyExists</span><span class="token punctuation">(</span><span class="token string">\'config.js\'</span><span class="token punctuation">,</span> <span class="token string">\'fePort\'</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n   description<span class="token punctuation">:</span> <span class="token string">\'生成 package\'</span><span class="token punctuation">,</span>\n   prompts<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n         type<span class="token punctuation">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n         name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n         message<span class="token punctuation">:</span> <span class="token string">\'package 叫什么名字？\'</span><span class="token punctuation">,</span>\n         <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token string">\'demo\'</span><span class="token punctuation">,</span>\n         <span class="token function-variable function">validate</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/.+/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               <span class="token keyword">return</span> <span class="token function">directoryExists</span><span class="token punctuation">(</span><span class="token string">\'packages\'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">\'package 名字已存在\'</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token string">\'package 名字必填\'</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n         type<span class="token punctuation">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n         name<span class="token punctuation">:</span> <span class="token string">\'serverPort\'</span><span class="token punctuation">,</span>\n         message<span class="token punctuation">:</span> <span class="token string">\'package 的 Node.js 服务端口？\'</span><span class="token punctuation">,</span>\n         <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token string">\'8001\'</span><span class="token punctuation">,</span>\n         <span class="token function-variable function">validate</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/.+/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               <span class="token keyword">return</span> <span class="token function">portExists</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">\'要设置 package 的 Node.js 服务端口已被占用\'</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token string">\'package 名字必填\'</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n         type<span class="token punctuation">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n         name<span class="token punctuation">:</span> <span class="token string">\'fePort\'</span><span class="token punctuation">,</span>\n         message<span class="token punctuation">:</span> <span class="token string">\'package 的 webpack-dev-server 端口？\'</span><span class="token punctuation">,</span>\n         <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token string">\'8002\'</span><span class="token punctuation">,</span>\n         <span class="token function-variable function">validate</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/.+/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               <span class="token keyword">return</span> <span class="token function">portExists</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">\'要设置 package 的 webpack-dev-server 端口已被占用\'</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token string">\'package 名字必填\'</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n   <span class="token punctuation">]</span><span class="token punctuation">,</span>\n   <span class="token function-variable function">actions</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">[</span>\n         <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'copy\'</span><span class="token punctuation">,</span>\n            src<span class="token punctuation">:</span> <span class="token string">\'internals/generators/package/template\'</span><span class="token punctuation">,</span>\n            dest<span class="token punctuation">:</span> <span class="token string">\'packages/{{ dashCase name }}\'</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n         <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'addMany\'</span><span class="token punctuation">,</span>\n            templateFiles<span class="token punctuation">:</span> <span class="token string">\'package/*.hbs\'</span><span class="token punctuation">,</span>\n            destination<span class="token punctuation">:</span> <span class="token string">\'../../packages/{{ dashCase name }}/\'</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> actions<span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="带模板变量的模板文件"><a href="#%E5%B8%A6%E6%A8%A1%E6%9D%BF%E5%8F%98%E9%87%8F%E7%9A%84%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>带模板变量的模板文件</h3>\n<p>hbs 文件为模板文件，所有需要替换的地方用 <code class="language-text">{{}}</code> 模板变量，详情请查看 <a href="https://github.com/plopjs/plop" target="_blank" rel="nofollow noreferrer noopener">plop</a>，其他模板文件不再举例</p>\n<p>internals/generators/package/config.js.hbs</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="66951471756027200000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`module.exports = {\n  prefix: \'page\',\n  serverPort: {{ serverPort }},\n  fePort: {{ fePort }}\n}`, `66951471756027200000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="hbs"\n              >\n                <span class="gatsby-code-button-language">hbs</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="hbs"><pre style="counter-reset: linenumber NaN" class="language-hbs line-numbers"><code class="language-hbs">module.exports = {\n  prefix: &#39;page&#39;,\n  serverPort: {{ serverPort }},\n  fePort: {{ fePort }}\n}</code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="运行结果"><a href="#%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>运行结果</h3>\n<p>以下是检测存在冲突的情况</p>\n<p><img src="/static/code-generation-addfae6d6b5126e00ca2c25e4c38dd96.gif" alt="代码生成冲突检测"></p>\n<h2 id="脚本执行封装"><a href="#%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E5%B0%81%E8%A3%85" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>脚本执行封装</h2>\n<p>封装 lerna 脚本，以实现脚本的并行执行</p>\n<p>internals/scripts/helpers/argv.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="57291686237271630000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`module.exports = require(\'minimist\')(process.argv.slice(2));`, `57291686237271630000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'minimist\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span></span></pre></div>\n<p>internals/scripts/run.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="74640498891285460000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`#!/usr/bin/env node\n\nconst shelljs = require(\'shelljs\');\nconst argv = require(\'./helpers/argv\');\n\nlet scopeParams = [];\nconst arguments = argv._;\n\nif (arguments && arguments.length > 0) {\n   scopeParams = arguments.map((item) => \\`--scope=\\${item}\\`);\n}\n\nshelljs.exec(\\`\n  cross-env FORCE_COLOR=1 lerna run \\${argv.cmd} --stream --parallel \\${scopeParams.join(\' \')}\n\\`);`, `74640498891285460000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js">#<span class="token operator">!</span><span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>env node\n\n<span class="token keyword">const</span> shelljs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'shelljs\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> argv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./helpers/argv\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> scopeParams <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> arguments <span class="token operator">=</span> argv<span class="token punctuation">.</span>_<span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>arguments <span class="token operator">&amp;&amp;</span> arguments<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   scopeParams <span class="token operator">=</span> arguments<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">--scope=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nshelljs<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  cross-env FORCE_COLOR=1 lerna run </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>argv<span class="token punctuation">.</span>cmd<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> --stream --parallel </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>scopeParams<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\' \'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="使用说明"><a href="#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>使用说明</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="80965815344317050000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`npm i # 安装依赖\n\n# 启动\nnpm start # 并行启动所有 package\nnpm start website # 启动 website 项目\nnpm start website demo # 并行启动 website,demo 项目\n\n# 编译\nnpm run build # 并行编译所有 package\nnpm run build website # 编译 package 项目\nnpm run build website demo # 并行编译 website,demo 项目\n\n# 模板代码生成\nnpm run generate`, `80965815344317050000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="bash"\n              >\n                <span class="gatsby-code-button-language">bash</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="bash"><pre style="counter-reset: linenumber NaN" class="language-bash line-numbers"><code class="language-bash"><span class="token function">npm</span> i <span class="token comment"># 安装依赖</span>\n\n<span class="token comment"># 启动</span>\n<span class="token function">npm</span> start <span class="token comment"># 并行启动所有 package</span>\n<span class="token function">npm</span> start website <span class="token comment"># 启动 website 项目</span>\n<span class="token function">npm</span> start website demo <span class="token comment"># 并行启动 website,demo 项目</span>\n\n<span class="token comment"># 编译</span>\n<span class="token function">npm</span> run build <span class="token comment"># 并行编译所有 package</span>\n<span class="token function">npm</span> run build website <span class="token comment"># 编译 package 项目</span>\n<span class="token function">npm</span> run build website demo <span class="token comment"># 并行编译 website,demo 项目</span>\n\n<span class="token comment"># 模板代码生成</span>\n<span class="token function">npm</span> run generate</code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id="二期"><a href="#%E4%BA%8C%E6%9C%9F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>二期</h1>\n<p>由于项目代码需要分离，不再使用 lerna 管理各个产品线的包，所以二期主要工作在于封装成可用的命令行，以便直接使用它来新建项目</p>\n<p>参考链接：<a href="https://juejin.cn/post/6919308174151385096" target="_blank" rel="nofollow noreferrer noopener">从 0-1 搭建 react，ts 脚手架</a></p>\n<h2 id="目录结构-1"><a href="#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>目录结构</h2>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="47751646781889520000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`.\n├── bin\n│   └── cli.js // 脚本主入口\n├── internals\n│   ├── generators\n│   │   ├── index.js // 模板代码生成\n│   │   ├── package\n│   │   │   ├── config.js.hbs\n│   │   │   ├── index.js\n│   │   │   ├── package-lock.json.hbs\n│   │   │   ├── package.json.hbs\n│   │   │   └── template\n│   │   ├── page\n│   │   │   └── index.js\n│   │   └── utils\n│   │       ├── directoryExists.js\n│   │       └── fileKeyExists.js\n│   └── scripts\n│       ├── helpers\n│       │   └── argv.js\n│       └── run.js\n├── package-lock.json\n├── package.json\n├── src\n│   ├── create.js // 模板代码生成主入口\n│   └── start.js\n└── utils\n    └── index.js`, `47751646781889520000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token punctuation">.</span>\n├── bin\n│   └── cli<span class="token punctuation">.</span>js <span class="token comment">// 脚本主入口</span>\n├── internals\n│   ├── generators\n│   │   ├── index<span class="token punctuation">.</span>js <span class="token comment">// 模板代码生成</span>\n│   │   ├── <span class="token keyword">package</span>\n│   │   │   ├── config<span class="token punctuation">.</span>js<span class="token punctuation">.</span>hbs\n│   │   │   ├── index<span class="token punctuation">.</span>js\n│   │   │   ├── <span class="token keyword">package</span><span class="token operator">-</span>lock<span class="token punctuation">.</span>json<span class="token punctuation">.</span>hbs\n│   │   │   ├── <span class="token keyword">package</span><span class="token punctuation">.</span>json<span class="token punctuation">.</span>hbs\n│   │   │   └── template\n│   │   ├── page\n│   │   │   └── index<span class="token punctuation">.</span>js\n│   │   └── utils\n│   │       ├── directoryExists<span class="token punctuation">.</span>js\n│   │       └── fileKeyExists<span class="token punctuation">.</span>js\n│   └── scripts\n│       ├── helpers\n│       │   └── argv<span class="token punctuation">.</span>js\n│       └── run<span class="token punctuation">.</span>js\n├── <span class="token keyword">package</span><span class="token operator">-</span>lock<span class="token punctuation">.</span>json\n├── <span class="token keyword">package</span><span class="token punctuation">.</span>json\n├── src\n│   ├── create<span class="token punctuation">.</span>js <span class="token comment">// 模板代码生成主入口</span>\n│   └── start<span class="token punctuation">.</span>js\n└── utils\n    └── index<span class="token punctuation">.</span>js</code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="脚本主入口-1"><a href="#%E8%84%9A%E6%9C%AC%E4%B8%BB%E5%85%A5%E5%8F%A3-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>脚本主入口</h2>\n<p>package.json</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="47305968045348970000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`{\n   &quot;name&quot;: &quot;cli&quot;,\n   &quot;version&quot;: &quot;1.0.0&quot;,\n   &quot;description&quot;: &quot;销服C端脚手架&quot;,\n   &quot;main&quot;: &quot;index.js&quot;,\n   &quot;scripts&quot;: {\n      &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; && exit 1&quot;,\n      &quot;start&quot;: &quot;node internals/scripts/run --cmd=start&quot;,\n      &quot;build&quot;: &quot;node internals/scripts/run --cmd=build&quot;\n   },\n   &quot;bin&quot;: {\n      &quot;cli&quot;: &quot;./bin/cli.js&quot;\n   },\n   &quot;author&quot;: &quot;&quot;,\n   &quot;license&quot;: &quot;ISC&quot;,\n   &quot;dependencies&quot;: {\n      &quot;commander&quot;: &quot;^8.2.0&quot;,\n      &quot;cross-env&quot;: &quot;^7.0.3&quot;,\n      &quot;minimist&quot;: &quot;^1.2.5&quot;,\n      &quot;plop&quot;: &quot;^2.7.4&quot;,\n      &quot;shelljs&quot;: &quot;^0.8.4&quot;\n   }\n}`, `47305968045348970000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="json"\n              >\n                <span class="gatsby-code-button-language">json</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="json"><pre style="counter-reset: linenumber NaN" class="language-json line-numbers"><code class="language-json"><span class="token punctuation">{</span>\n   <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"cli"</span><span class="token punctuation">,</span>\n   <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>\n   <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"销服C端脚手架"</span><span class="token punctuation">,</span>\n   <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>\n   <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \\"Error: no test specified\\" &amp;&amp; exit 1"</span><span class="token punctuation">,</span>\n      <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node internals/scripts/run --cmd=start"</span><span class="token punctuation">,</span>\n      <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"node internals/scripts/run --cmd=build"</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n   <span class="token property">"bin"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">"cli"</span><span class="token operator">:</span> <span class="token string">"./bin/cli.js"</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n   <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n   <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">,</span>\n   <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">"commander"</span><span class="token operator">:</span> <span class="token string">"^8.2.0"</span><span class="token punctuation">,</span>\n      <span class="token property">"cross-env"</span><span class="token operator">:</span> <span class="token string">"^7.0.3"</span><span class="token punctuation">,</span>\n      <span class="token property">"minimist"</span><span class="token operator">:</span> <span class="token string">"^1.2.5"</span><span class="token punctuation">,</span>\n      <span class="token property">"plop"</span><span class="token operator">:</span> <span class="token string">"^2.7.4"</span><span class="token punctuation">,</span>\n      <span class="token property">"shelljs"</span><span class="token operator">:</span> <span class="token string">"^0.8.4"</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="模板代码生成-1"><a href="#%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>模板代码生成</h2>\n<p>以下仅列出和一期的不同点</p>\n<h3 id="模板代码执行主入口-1"><a href="#%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%BB%E5%85%A5%E5%8F%A3-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>模板代码执行主入口</h3>\n<p>相比一期主要多了新建项目后 <code class="language-text">npm install</code> 的功能</p>\n<p>bin/cli.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="39888604343406330000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`#!/usr/bin/env node\nconst program = require(\'commander\');\nconst create = require(\'../src/create\');\n// const start = require(&quot;../src/start&quot;);\n\nconst { green } = require(\'../utils\');\n\nprogram.version(\'1.0.0\');\n\n/* create a project */\nprogram\n   .command(\'create\')\n   .description(\'create a project \')\n   .action(function() {\n      green(\'👽 👽 👽 \' + \'欢迎使用 rux, 轻松构建 react ts 项目～🎉🎉🎉\');\n      create();\n   });\n\n/* start project */\nprogram\n   .command(\'start\')\n   .description(\'start a project\')\n   .action(function() {\n      green(\'--------运行项目-------\');\n      start(\'start\').then(() => {\n         green(\'-------✅  ✅运行完成-------\');\n      });\n   });\n\nprogram.parse(process.argv);`, `39888604343406330000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js">#<span class="token operator">!</span><span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>env node\n<span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'commander\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> create <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'../src/create\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// const start = require("../src/start");</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> green <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'../utils\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nprogram<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">\'1.0.0\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/* create a project */</span>\nprogram\n   <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">\'create\'</span><span class="token punctuation">)</span>\n   <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">\'create a project \'</span><span class="token punctuation">)</span>\n   <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">green</span><span class="token punctuation">(</span><span class="token string">\'👽 👽 👽 \'</span> <span class="token operator">+</span> <span class="token string">\'欢迎使用 rux, 轻松构建 react ts 项目～🎉🎉🎉\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/* start project */</span>\nprogram\n   <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">\'start\'</span><span class="token punctuation">)</span>\n   <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">\'start a project\'</span><span class="token punctuation">)</span>\n   <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">green</span><span class="token punctuation">(</span><span class="token string">\'--------运行项目-------\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">start</span><span class="token punctuation">(</span><span class="token string">\'start\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n         <span class="token function">green</span><span class="token punctuation">(</span><span class="token string">\'-------✅  ✅运行完成-------\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nprogram<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>internals/generators/index.js</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="44883244812696080000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`const shell = require(\'shelljs\');\nconst { spawn } = require(\'child_process\');\n\nconst packageGenerator = require(\'./package/index.js\');\n\nconst didSucceed = (code) => \\`\\${code}\\` === \'0\';\n\nfunction npmInstall(answers, config, plop) {\n   const path = plop.renderString(config.path, answers);\n   const spawnOptions = config.verbose\n      ? {\n           cwd: path,\n           shell: true,\n           stdio: \'inherit\'\n        }\n      : {\n           cwd: path\n        };\n\n   return new Promise((resolve, reject) => {\n      const npmI = spawn(\'npm\', [\'install\'], spawnOptions);\n\n      npmI.on(\'close\', (code) => {\n         if (didSucceed(code)) {\n            resolve(\\`npm install ran correctly\\`);\n         } else {\n            reject(\\`npm install exited with \\${code}\\`);\n         }\n      });\n   });\n}\n\nmodule.exports = (plop) => {\n   plop.setGenerator(\'package\', packageGenerator);\n   // plop.setGenerator(&quot;page&quot;, containerGenerator);\n   plop.setDefaultInclude({ actionTypes: true });\n   plop.setActionType(\'copy\', (answers, config, plop) => {\n      const src = plop.renderString(config.src, answers);\n      const dest = plop.renderString(config.dest, answers);\n      shell.cp(\'-r\', src, dest);\n   });\n   plop.setActionType(\'npmInstall\', npmInstall);\n};`, `44883244812696080000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">const</span> shell <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'shelljs\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'child_process\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> packageGenerator <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./package/index.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">didSucceed</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">===</span> <span class="token string">\'0\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">npmInstall</span><span class="token punctuation">(</span><span class="token parameter">answers<span class="token punctuation">,</span> config<span class="token punctuation">,</span> plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">const</span> path <span class="token operator">=</span> plop<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>path<span class="token punctuation">,</span> answers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token keyword">const</span> spawnOptions <span class="token operator">=</span> config<span class="token punctuation">.</span>verbose\n      <span class="token operator">?</span> <span class="token punctuation">{</span>\n           cwd<span class="token punctuation">:</span> path<span class="token punctuation">,</span>\n           shell<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n           stdio<span class="token punctuation">:</span> <span class="token string">\'inherit\'</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">:</span> <span class="token punctuation">{</span>\n           cwd<span class="token punctuation">:</span> path\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n   <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> npmI <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">\'npm\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'install\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> spawnOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      npmI<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">\'close\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">didSucceed</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">npm install ran correctly</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">npm install exited with </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n   plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">\'package\'</span><span class="token punctuation">,</span> packageGenerator<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token comment">// plop.setGenerator("page", containerGenerator);</span>\n   plop<span class="token punctuation">.</span><span class="token function">setDefaultInclude</span><span class="token punctuation">(</span><span class="token punctuation">{</span> actionTypes<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   plop<span class="token punctuation">.</span><span class="token function">setActionType</span><span class="token punctuation">(</span><span class="token string">\'copy\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">answers<span class="token punctuation">,</span> config<span class="token punctuation">,</span> plop</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> src <span class="token operator">=</span> plop<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>src<span class="token punctuation">,</span> answers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> dest <span class="token operator">=</span> plop<span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>dest<span class="token punctuation">,</span> answers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      shell<span class="token punctuation">.</span><span class="token function">cp</span><span class="token punctuation">(</span><span class="token string">\'-r\'</span><span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   plop<span class="token punctuation">.</span><span class="token function">setActionType</span><span class="token punctuation">(</span><span class="token string">\'npmInstall\'</span><span class="token punctuation">,</span> npmInstall<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="项目级别的代码模板命令执行入口-1"><a href="#%E9%A1%B9%E7%9B%AE%E7%BA%A7%E5%88%AB%E7%9A%84%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%85%A5%E5%8F%A3-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>项目级别的代码模板命令执行入口</h3>\n<p>相比一期增加 <code class="language-text">npm install</code> 逻辑</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="47281624091103306000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`const directoryExists = require(\'../utils/directoryExists\');\nconst fileKeyExists = require(\'../utils/fileKeyExists\');\n\nconst portExists = (value) =>\n   fileKeyExists(\'config.js\', \'serverPort\', 3000, value) || fileKeyExists(\'config.js\', \'fePort\', 8888, value);\n\nmodule.exports = {\n   description: \'生成 package\',\n   prompts: [\n      {\n         type: \'input\',\n         name: \'name\',\n         message: \'package 叫什么名字？\',\n         default: \'demo\',\n         validate: (value) => {\n            if (/.+/.test(value)) {\n               return directoryExists(\'packages\', value) ? \'package 名字已存在\' : true;\n            }\n\n            return \'package 名字必填\';\n         }\n      },\n      {\n         type: \'input\',\n         name: \'serverPort\',\n         message: \'package 的 Node.js 服务端口？\',\n         default: \'8001\',\n         validate: (value) => {\n            if (/.+/.test(value)) {\n               return portExists(value) ? \'要设置 package 的 Node.js 服务端口已被占用\' : true;\n            }\n\n            return \'package 名字必填\';\n         }\n      },\n      {\n         type: \'input\',\n         name: \'fePort\',\n         message: \'package 的 webpack-dev-server 端口？\',\n         default: \'8002\',\n         validate: (value) => {\n            if (/.+/.test(value)) {\n               return portExists(value) ? \'要设置 package 的 webpack-dev-server 端口已被占用\' : true;\n            }\n\n            return \'package 名字必填\';\n         }\n      }\n   ],\n   actions: (data) => {\n      const actions = [\n         {\n            type: \'copy\',\n            src: \'internals/generators/package/template\',\n            dest: \'packages/{{ dashCase name }}\'\n         },\n         {\n            type: \'addMany\',\n            templateFiles: \'package/*.hbs\',\n            destination: \'../../packages/{{ dashCase name }}/\'\n         },\n         {\n            type: \'npmInstall\',\n            path: \\`packages/{{ dashCase name }}/\\`\n         }\n      ];\n\n      return actions;\n   }\n};`, `47281624091103306000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="js"\n              >\n                <span class="gatsby-code-button-language">js</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="js"><pre style="counter-reset: linenumber NaN" class="language-js line-numbers"><code class="language-js"><span class="token keyword">const</span> directoryExists <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'../utils/directoryExists\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> fileKeyExists <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'../utils/fileKeyExists\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">portExists</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n   <span class="token function">fileKeyExists</span><span class="token punctuation">(</span><span class="token string">\'config.js\'</span><span class="token punctuation">,</span> <span class="token string">\'serverPort\'</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">fileKeyExists</span><span class="token punctuation">(</span><span class="token string">\'config.js\'</span><span class="token punctuation">,</span> <span class="token string">\'fePort\'</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n   description<span class="token punctuation">:</span> <span class="token string">\'生成 package\'</span><span class="token punctuation">,</span>\n   prompts<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n         type<span class="token punctuation">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n         name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n         message<span class="token punctuation">:</span> <span class="token string">\'package 叫什么名字？\'</span><span class="token punctuation">,</span>\n         <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token string">\'demo\'</span><span class="token punctuation">,</span>\n         <span class="token function-variable function">validate</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/.+/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               <span class="token keyword">return</span> <span class="token function">directoryExists</span><span class="token punctuation">(</span><span class="token string">\'packages\'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">\'package 名字已存在\'</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token string">\'package 名字必填\'</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n         type<span class="token punctuation">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n         name<span class="token punctuation">:</span> <span class="token string">\'serverPort\'</span><span class="token punctuation">,</span>\n         message<span class="token punctuation">:</span> <span class="token string">\'package 的 Node.js 服务端口？\'</span><span class="token punctuation">,</span>\n         <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token string">\'8001\'</span><span class="token punctuation">,</span>\n         <span class="token function-variable function">validate</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/.+/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               <span class="token keyword">return</span> <span class="token function">portExists</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">\'要设置 package 的 Node.js 服务端口已被占用\'</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token string">\'package 名字必填\'</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n         type<span class="token punctuation">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n         name<span class="token punctuation">:</span> <span class="token string">\'fePort\'</span><span class="token punctuation">,</span>\n         message<span class="token punctuation">:</span> <span class="token string">\'package 的 webpack-dev-server 端口？\'</span><span class="token punctuation">,</span>\n         <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token string">\'8002\'</span><span class="token punctuation">,</span>\n         <span class="token function-variable function">validate</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/.+/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               <span class="token keyword">return</span> <span class="token function">portExists</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">\'要设置 package 的 webpack-dev-server 端口已被占用\'</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token string">\'package 名字必填\'</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n   <span class="token punctuation">]</span><span class="token punctuation">,</span>\n   <span class="token function-variable function">actions</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">[</span>\n         <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'copy\'</span><span class="token punctuation">,</span>\n            src<span class="token punctuation">:</span> <span class="token string">\'internals/generators/package/template\'</span><span class="token punctuation">,</span>\n            dest<span class="token punctuation">:</span> <span class="token string">\'packages/{{ dashCase name }}\'</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n         <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'addMany\'</span><span class="token punctuation">,</span>\n            templateFiles<span class="token punctuation">:</span> <span class="token string">\'package/*.hbs\'</span><span class="token punctuation">,</span>\n            destination<span class="token punctuation">:</span> <span class="token string">\'../../packages/{{ dashCase name }}/\'</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n         <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'npmInstall\'</span><span class="token punctuation">,</span>\n            path<span class="token punctuation">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">packages/{{ dashCase name }}/</span><span class="token template-punctuation string">`</span></span>\n         <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> actions<span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="运行结果-1"><a href="#%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>运行结果</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="60949690341171410000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`\\$ cli create\n👽 👽 👽 欢迎使用 rux, 轻松构建 react ts 项目～🎉🎉🎉\n? package 叫什么名字？ (demo) 项目路径/packages\n? package 叫什么名字？ demo\n? package 的 Node.js 服务端口？ 8001\n? package 的 webpack-dev-server 端口？ 8002\n✔  copy\n✔  +! 3 files added\n -> 项目路径/packages/demo/config.js\n -> 项目路径/packages/demo/package-lock.json\n -> 项目路径/packages/demo/package.json\n✔  npmInstall npm install ran correctly`, `60949690341171410000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="bash"\n              >\n                <span class="gatsby-code-button-language">bash</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="bash"><pre style="counter-reset: linenumber NaN" class="language-bash line-numbers"><code class="language-bash">$ cli create\n👽 👽 👽 欢迎使用 rux, 轻松构建 react ts 项目～🎉🎉🎉\n? package 叫什么名字？ <span class="token punctuation">(</span>demo<span class="token punctuation">)</span> 项目路径/packages\n? package 叫什么名字？ demo\n? package 的 Node.js 服务端口？ <span class="token number">8001</span>\n? package 的 webpack-dev-server 端口？ <span class="token number">8002</span>\n✔  copy\n✔  +<span class="token operator">!</span> <span class="token number">3</span> files added\n -<span class="token operator">></span> 项目路径/packages/demo/config.js\n -<span class="token operator">></span> 项目路径/packages/demo/package-lock.json\n -<span class="token operator">></span> 项目路径/packages/demo/package.json\n✔  npmInstall <span class="token function">npm</span> <span class="token function">install</span> ran correctly</code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>// TODO 代码生成脚手架还在完成中</p>',
id:"/home/runner/work/GatsbyBlog/GatsbyBlog/blog/代码生成脚手架搭建/index.md absPath of file >>> MarkdownRemark",timeToRead:10,frontmatter:{date:"2021-11-15 11:43:19",path:"/code-generation-scaffolding/",tags:"前端, 前端工程化, 预研",title:"代码生成脚手架搭建",draft:null}}],length:1,tag:"前端工程化",pagesSum:1,page:1}}}});